2.0.3 2016-07-26

- Small instruction print change

2.0.2 2016-07-25

- Fix some PyPy op classification bugs

2.0.1 2016-07-24

- PyPy bug fixes. (More probably to come.)
  * pypy 3.x opcodes need to be their own thing
  * classify LOOKUP_METHOD and CALL_METHOD
    (probably will need to classify others too)
  * some PyPy testing tolerance

2.0.0 2016-07-24

- Support PyPy 2.x and 3.x
  * load() now returns whether we've loaded PyPy. This is an incompatible change
  * added is_pypy(magic_int)

- Support Python 3.6

- Remove uncompyle6's JA and JF: Use standard JUMP_ABSOLUTE and
  JUMP_FORWARD.

- Instructions store whether they have an argument

1.1.7 2016-07-09

- Fix bug in 2.4 complex type unmarshalling

1.1.6 2016-07-08

- Fix More Python 2.4 bugs

1.1.5 2016-07-08

- Add Python 2.4 jrel, jabs sets

1.1.4 2016-07-07

-  Correct bad python 3.3 magic number

1.1.3 2016-06-27

- Bug - Python < 2.7 JUMP_IF_{TRUE,FALSE} are
  relative jumps, not absolute

1.1.2 2016-06-24

- Bug - Python 2.4-2.6 LIST_APPEND doesn't take an extended arg

1.1.1 2016-06-3

- opcode 2.3 fixes

1.1.0 2016-05-31 Mom

- Expose needed opcode values and bug fixes
- drop support for running on Python 2.5

1.0.5 2016-05-29

For Python 2.3-2.5 add pseudo opcodes PJIF PJIT JA
This simplifies code in cross-version tools like uncompyle6

1.0.4 2016-05-28

Small omissions found by uncompyle6

- export findlinestarts
- correct pydisassemble.py imports
- add 2.4, 2.5 hasArgumentExtended
- add hasjrel, and hasjabs
- Add JUMP_OPs and JPIF, JPIT, JA, JF

1.0.1-1.0.3 2016-05-27

Minor fixes

- small bugs and make more usable in uncompyle6

1.0.0 2016-05-26 First release

- Reduce redundancy in opcodes
- Use 3.5.1 disassembly format
- Start to roll in PYPY marshal routines
- support PYPY and be able to run under
  Python 2.5 - 3.5 with opcodes going back to 2.3

See uncompyle6 for past releases/history
